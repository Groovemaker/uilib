@name 
@inputs 
@persist MouseEnabled LoopInterval CursorMat:string CursorEnable Userman:entity User:entity BtnAlpha TxtFont:string ThemeStyle:string Gradient:vector OldSiz:vector2 BarSiz:vector2 OldPos:vector2 BackgroundEnable ButtonStyle:string Background:string Value Seq:array BtnWrongColor:vector BtnRightColor:vector PassA:array Pass:string Cursor:vector2 ID Button1 Button2 Button3 Button4 Button5 Button6 Button7 Button8 Button9 Pressed1 Use B BtnPressColor:vector BtnForeColor2:vector BtnForeColor:vector BtnTextColor:vector But EGP:wirelink
@trigger 

#Place your Theme File here!
#include "ui/themes/blurple_gmod"

#Init
MouseEnabled = 0
LoopInterval = 100

if(TxtFont == ""){
    TxtFont = "DermaDefault"
}
if(CursorMat == ""){
    CursorMat = "icon16/cursor.png"
}
#### Other stuff

function number wirelink:initUI(){
    if(BackgroundEnable == 1){
        EGP:egpBox(999,vec2(256,256),vec2(512,512))
        EGP:egpMaterial(999,Background)
        EGP:egpOrder(999,1) 
    }
    if(CursorEnable == 1){
        EGP:egpBox(111,vec2(256,256),vec2(24,24))
        EGP:egpMaterial(111,CursorMat)

    }
    return 1
}
function number wirelink:createbutton(Pos:vector2,Size:vector2,Txt:string,TxtSiz){
    ID+=2
    if(ButtonStyle != "Rounded" && ButtonStyle != "Gradient"){
        EGP:egpBox(ID,Pos,Size)  
        EGP:egpBoxOutline(ID+2,Pos,Size * 1.5)
        EGP:egpColor(ID+2,BtnForeColor2) 
    }
    if(ButtonStyle == "Gradient"){
        EGP:egpRoundedBox(ID,Pos,Size)
        EGP:egpRadius(ID,30)

        EGP:egpRoundedBox(ID+122,Pos,Size)
        EGP:egpRadius(ID+122,30)
        EGP:egpMaterial(ID+122,"gui/gradient_down")
        EGP:egpColor(ID+122,Gradient)
    }
    if(ButtonStyle == "Rounded"){
        EGP:egpRoundedBox(ID,Pos,Size)
        EGP:egpRadius(ID,30)
    }
    if(ThemeStyle == "Modern"){
        EGP:egpAlpha(ID,BtnAlpha)
    }
    EGP:egpText(ID+1,Txt,vec2(Pos[1],Pos[2]))
    EGP:egpAlign(ID+1,1,1)
    EGP:egpFont(ID+1,TxtFont,TxtSiz)
    EGP:egpColor(ID,BtnForeColor)
    EGP:egpColor(ID+1,BtnTextColor)
    #EGP:egpColor(ID+2,BtnForeColor2) 
    return ID
}
function number wirelink:createiconbutton(Pos:vector2,Size:vector2,Txt:string,TxtSiz,Icon:string,IconSize:vector2){
    ID+=2
    if(ButtonStyle != "Rounded" && ButtonStyle != "Gradient"){
        EGP:egpBox(ID,Pos,Size)  
        EGP:egpBoxOutline(ID+2,Pos,Size * 1.5)
        EGP:egpColor(ID+2,BtnForeColor2) 
        EGP:egpBox(ID+122,Pos,(Size*IconSize))
        EGP:egpMaterial(ID+122,Icon)
        EGP:egpColor(ID+122,vec(255))
    }else{
        EGP:egpRoundedBox(ID,Pos,Size)
        EGP:egpRadius(ID,11)
        EGP:egpColor(ID,BtnForeColor) 
    }
    if(ButtonStyle == "Gradient"){
        EGP:egpRoundedBox(ID+122,Pos,Size)
        EGP:egpRadius(ID+122,11)
        EGP:egpMaterial(ID+122,"gui/gradient_down")
        EGP:egpColor(ID+122,Gradient)

    }
    if(ThemeStyle == "Modern"){
        EGP:egpAlpha(ID,BtnAlpha)
    }
        EGP:egpBox(ID+133,Pos,(Size*IconSize))
        EGP:egpMaterial(ID+133,Icon)
        EGP:egpColor(ID+133,vec(255))
    #EGP:egpText(ID+1,Txt,vec2(Pos[1],Pos[2]))
    #EGP:egpAlign(ID+1,1,1)
    #EGP:egpFont(ID+1,TxtFont,TxtSiz)
    EGP:egpColor(ID,BtnForeColor)
    #EGP:egpColor(ID+1,BtnTextColor)
    #EGP:egpColor(ID+2,BtnForeColor2)
    
    return ID
}
function number wirelink:createbuttonEx(ID, Pos:vector2,Size:vector2,Txt:string,TxtSiz){

    if(ButtonStyle != "Rounded" && ButtonStyle != "Gradient"){
        EGP:egpBox(ID,Pos,Size)  
        EGP:egpBoxOutline(ID+2,Pos,Size * 1.5)
        EGP:egpColor(ID+2,BtnForeColor2) 
    }
    if(ButtonStyle == "Gradient"){
        EGP:egpRoundedBox(ID,Pos,Size)
        EGP:egpRadius(ID,30)

        EGP:egpRoundedBox(ID+2,Pos,Size)
        EGP:egpRadius(ID+2,30)
        EGP:egpMaterial(ID+2,"gui/gradient_down")
        EGP:egpColor(ID+2,Gradient)
    }
    if(ButtonStyle == "Rounded"){
        EGP:egpRoundedBox(ID,Pos,Size)
        EGP:egpRadius(ID,30)
    }
    if(ThemeStyle == "Modern"){
        EGP:egpAlpha(ID,BtnAlpha)
    }
    EGP:egpText(ID+1,Txt,vec2(Pos[1],Pos[2]))
    EGP:egpAlign(ID+1,1,1)
    EGP:egpFont(ID+1,TxtFont,TxtSiz)
    EGP:egpColor(ID,BtnForeColor)
    EGP:egpColor(ID+1,BtnTextColor)
    #EGP:egpColor(ID+2,BtnForeColor2) 
    return ID
}
function number wirelink:createiconbuttonEx(ID, Pos:vector2,Size:vector2,Icon:string,IconSize:vector2){
    if(ButtonStyle != "Rounded" && ButtonStyle != "Gradient"){
        EGP:egpBox(ID,Pos,Size)  
        EGP:egpBoxOutline(ID+2,Pos,Size * 1.5)
        EGP:egpColor(ID+2,BtnForeColor2) 
        EGP:egpBox(ID+122,Pos,(Size*IconSize))
        EGP:egpMaterial(ID+122,Icon)
        EGP:egpColor(ID+122,vec(255))

    }else{
        EGP:egpRoundedBox(ID,Pos,Size)
        EGP:egpRadius(ID,11)
        EGP:egpColor(ID,BtnForeColor) 
    }
    if(ButtonStyle == "Gradient"){
        EGP:egpRoundedBox(ID+122,Pos,Size)
        EGP:egpRadius(ID+122,11)
        EGP:egpMaterial(ID+122,"gui/gradient_down")
        EGP:egpColor(ID+122,Gradient)

    }
    if(ThemeStyle == "Modern"){
        EGP:egpAlpha(ID,BtnAlpha)
    }
        EGP:egpBox(ID+133,Pos,(Size*IconSize))
        EGP:egpMaterial(ID+133,Icon)
        EGP:egpColor(ID+133,vec(255))
    #EGP:egpText(ID+1,Txt,vec2(Pos[1],Pos[2]))
    #EGP:egpAlign(ID+1,1,1)
    #EGP:egpFont(ID+1,TxtFont,TxtSiz)
    EGP:egpColor(ID,BtnForeColor)
    #EGP:egpColor(ID+1,BtnTextColor)
    #EGP:egpColor(ID+2,BtnForeColor2)
    EGP:egpOrder(ID+133,998)
    
    return ID
}
function number wirelink:button(Cursor:vector2,ID:number){
    local BPos = This:egpPos(ID)
    local BSize = This:egpSize(ID)/2
    local Pressed = inrange(Cursor,BPos-BSize,BPos+BSize)
    But = ID
    EGP:entity():soundPlay(1,0,PressSnd)
    return Pressed
}
function number wirelink:uiSetPos(ID:number,Pos:vector2){
    EGP:egpPos(ID,Pos)
    EGP:egpPos(ID+1,Pos)
    EGP:egpPos(ID+2,Pos)
    EGP:egpPos(ID+122,Pos)
    EGP:egpPos(ID+133,Pos)
    return 1
}
function number wirelink:createtextfield(Pos:vector2,Size:vector2,Txt:string,TxtSiz){
    ID+=2
    if(ThemeStyle == "Modern"){
        EGP:egpBox(ID,Pos,Size)
        EGP:egpColor(ID,BtnForeColor)
    }else{  
        EGP:egpBoxOutline(ID,Pos,Size)
        EGP:egpColor(ID,BtnForeColor2)
    }
    EGP:egpText(ID+1,Txt,vec2(Pos[1],Pos[2]))
    EGP:egpAlign(ID+1,1,1)
    EGP:egpFont(ID+1,TxtFont,TxtSiz)
    if(ThemeStyle == "Modern"){
        EGP:egpAlpha(ID,BtnAlpha)
    }
    return ID+1
}
function number wirelink:createprogressbar(Pos:vector2,Size:vector2){
    ID+=2
        if(ThemeStyle == "Modern"){
            EGP:egpBox(ID,Pos,Size)
            EGP:egpColor(ID,BtnForeColor)
        }else{  
            EGP:egpBoxOutline(ID,Pos,Size)
            EGP:egpColor(ID,BtnForeColor2)
        }
        EGP:egpBox(ID+1,Pos-vec2((Pos:x()*Size:x())*0.00156,0),vec2(1,Size:y() * 0.5)+vec2(0,0))
        #print((Pos:x()*Size:x())*1)
        EGP:egpColor(ID+1,BtnForeColor2)
        EGP:egpAlign(ID+1,2)
        if(ThemeStyle == "Modern"){
            EGP:egpAlpha(ID,BtnAlpha)
        }
        return ID+1
}
function wirelink:updateprogress(ID,Progress){
    if(changed(ID)){
        BarSiz = EGP:egpSize(ID-1)
        OldSiz = EGP:egpSize(ID)
        OldPos = EGP:egpPos(ID)

    }
    if(Progress <= 100){
        Multiplied = (Progress * BarSiz:x())*0.0078
        EGP:egpBox(ID,OldPos+vec2(Multiplied/2,0),OldSiz+vec2(Multiplied,0))
        EGP:egpColor(ID,BtnForeColor2)
        EGP:egpAlign(ID,2)
    }else{
        Progress = 100
        Multiplied = (Progress * BarSiz:x())*0.0078
        EGP:egpBox(ID,OldPos+vec2(Multiplied/2,0),OldSiz+vec2(Multiplied,0))
        EGP:egpColor(ID,BtnForeColor2)
        EGP:egpAlign(ID,2)
    }
}
function array wirelink:popup(Title:string,Size:vector2,Txt:string,TxtSiz){
    ID+=15
    if(ThemeStyle == "Modern"){
        EGP:egpRoundedBox(ID,vec2(256),Size)
        EGP:egpRadius(ID,11)
        EGP:egpColor(ID,BtnForeColor *1.3)
        EGP:egpBox(ID+2,vec2(256,256*1.05),vec2(Size[1]/1.1,Size[2]/1.25))
        EGP:egpColor(ID+2,BtnForeColor2)
        EGP:egpAlpha(ID+2,55)
    }else{  
        EGP:egpBoxOutline(ID,vec2(256),Size)
        EGP:egpColor(ID,BtnForeColor2)
        EGP:egpBox(ID+2,vec2(256,256*1.05),vec2(Size[1]/1.1,Size[2]/1.25))
        EGP:egpColor(ID+2,BtnForeColor)
    }

    EGP:egpBox(ID+3,vec2(256,256)+vec2(0.44,-0.42)*Size,vec2(0.12)*Size[2])
    EGP:egpMaterial(ID+3,"gui/close_32")
    EGP:egpColor(ID+3,vec(255,66,66))
    
    EGP:egpText(ID+1,Txt,vec2(vec2(256)[1],vec2(256)[2]))
    EGP:egpAlign(ID+1,1,1)
    EGP:egpFont(ID+1,TxtFont,TxtSiz)
    
    EGP:egpText(ID+111,Title,vec2(256,256)+vec2(-0.45,-0.42)*Size)
    EGP:egpAlign(ID+111,0,1)
    EGP:egpFont(ID+111,TxtFont,TxtSiz)
    if(ThemeStyle == "Modern"){
        #EGP:egpAlpha(ID,BtnAlpha)
    }
    return array(ID+3,Size)
}

function number wirelink:closepopup(Popup:array){
    PopID = Popup[1,number] - 3
    EGP:egpAlpha(PopID+3,0)
    EGP:egpAlpha(PopID+1,0)
    EGP:egpAlpha(PopID+2,0)
    EGP:egpAlpha(PopID,0)
    EGP:egpAlpha(PopID+111,0)
    Popup:clear()
    return 1
}
function number wirelink:movepopup(Popup:array,Pos:vector2){
    PopID = Popup[1,number] - 3
    Psize = Popup[2,vector2]:y()
    EGP:egpPos(PopID+3,Pos+vec2(0.64,-0.42)*Psize)
    EGP:egpPos(PopID+1,Pos)
    EGP:egpPos(PopID+2,vec2(Pos[1],Pos[2]*1.05))
    EGP:egpPos(PopID,Pos)
    EGP:egpPos(PopID+111,Pos+vec2(-0.65,-0.42)*Psize)
    return 1
}
function wirelink:cursor(){

    findInSphere(EGP:entity():pos(),133)
    findExcludeClass("*")
    findIncludeClass("player")
    Plys = findToArray()
    foreach(V,Ply:entity = Plys){
        if(Ply:aimEntity() == EGP:entity()){
            Userman = Ply
            if(MouseEnabled){
                User = Userman
                Cursor = EGP:egpCursor(User)
                Use = User:keyAttack1()
            }
        }
    }
    Cursor2 = EGP:egpCursor(Userman)
    EGP:egpPos(111,Cursor2)
    EGP:egpOrder(111,999)
}

